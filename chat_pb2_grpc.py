# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import chat_pb2 as chat__pb2


class ChatServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConnectToChat = channel.unary_unary(
                '/chat.ChatService/ConnectToChat',
                request_serializer=chat__pb2.ChatConnectionRequest.SerializeToString,
                response_deserializer=chat__pb2.ChatConnectionResponse.FromString,
                )
        self.ConnectToChatById = channel.unary_unary(
                '/chat.ChatService/ConnectToChatById',
                request_serializer=chat__pb2.ConnectToChatRequest.SerializeToString,
                response_deserializer=chat__pb2.ConnectToChatResponse.FromString,
                )
        self.GetClientInfo = channel.unary_unary(
                '/chat.ChatService/GetClientInfo',
                request_serializer=chat__pb2.ChatConnectionRequest.SerializeToString,
                response_deserializer=chat__pb2.ClientInfo.FromString,
                )
        self.SendMessage = channel.unary_unary(
                '/chat.ChatService/SendMessage',
                request_serializer=chat__pb2.MessageRequest.SerializeToString,
                response_deserializer=chat__pb2.MessageResponse.FromString,
                )
        self.ReceiveMessage = channel.unary_unary(
                '/chat.ChatService/ReceiveMessage',
                request_serializer=chat__pb2.MessageRequest.SerializeToString,
                response_deserializer=chat__pb2.MessageResponse.FromString,
                )
        self.SubscribeToGroupChat = channel.unary_unary(
                '/chat.ChatService/SubscribeToGroupChat',
                request_serializer=chat__pb2.GroupChatRequest.SerializeToString,
                response_deserializer=chat__pb2.GroupChatResponse.FromString,
                )
        self.SendMessageToGroupChat = channel.unary_unary(
                '/chat.ChatService/SendMessageToGroupChat',
                request_serializer=chat__pb2.GroupChatRequest.SerializeToString,
                response_deserializer=chat__pb2.GroupChatResponse.FromString,
                )
        self.SubscribeToPersistentGroupChat = channel.unary_unary(
                '/chat.ChatService/SubscribeToPersistentGroupChat',
                request_serializer=chat__pb2.GroupChatRequest.SerializeToString,
                response_deserializer=chat__pb2.GroupChatResponse.FromString,
                )
        self.SendMessageToPersistentGroupChat = channel.unary_unary(
                '/chat.ChatService/SendMessageToPersistentGroupChat',
                request_serializer=chat__pb2.GroupChatRequest.SerializeToString,
                response_deserializer=chat__pb2.GroupChatResponse.FromString,
                )
        self.DiscoverChats = channel.unary_unary(
                '/chat.ChatService/DiscoverChats',
                request_serializer=chat__pb2.Empty.SerializeToString,
                response_deserializer=chat__pb2.DiscoveryResponse.FromString,
                )
        self.InsultChannel = channel.unary_unary(
                '/chat.ChatService/InsultChannel',
                request_serializer=chat__pb2.Empty.SerializeToString,
                response_deserializer=chat__pb2.InsultResponse.FromString,
                )


class ChatServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ConnectToChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectToChatById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetClientInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeToGroupChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessageToGroupChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeToPersistentGroupChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessageToPersistentGroupChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DiscoverChats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsultChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConnectToChat': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectToChat,
                    request_deserializer=chat__pb2.ChatConnectionRequest.FromString,
                    response_serializer=chat__pb2.ChatConnectionResponse.SerializeToString,
            ),
            'ConnectToChatById': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectToChatById,
                    request_deserializer=chat__pb2.ConnectToChatRequest.FromString,
                    response_serializer=chat__pb2.ConnectToChatResponse.SerializeToString,
            ),
            'GetClientInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClientInfo,
                    request_deserializer=chat__pb2.ChatConnectionRequest.FromString,
                    response_serializer=chat__pb2.ClientInfo.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=chat__pb2.MessageRequest.FromString,
                    response_serializer=chat__pb2.MessageResponse.SerializeToString,
            ),
            'ReceiveMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveMessage,
                    request_deserializer=chat__pb2.MessageRequest.FromString,
                    response_serializer=chat__pb2.MessageResponse.SerializeToString,
            ),
            'SubscribeToGroupChat': grpc.unary_unary_rpc_method_handler(
                    servicer.SubscribeToGroupChat,
                    request_deserializer=chat__pb2.GroupChatRequest.FromString,
                    response_serializer=chat__pb2.GroupChatResponse.SerializeToString,
            ),
            'SendMessageToGroupChat': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessageToGroupChat,
                    request_deserializer=chat__pb2.GroupChatRequest.FromString,
                    response_serializer=chat__pb2.GroupChatResponse.SerializeToString,
            ),
            'SubscribeToPersistentGroupChat': grpc.unary_unary_rpc_method_handler(
                    servicer.SubscribeToPersistentGroupChat,
                    request_deserializer=chat__pb2.GroupChatRequest.FromString,
                    response_serializer=chat__pb2.GroupChatResponse.SerializeToString,
            ),
            'SendMessageToPersistentGroupChat': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessageToPersistentGroupChat,
                    request_deserializer=chat__pb2.GroupChatRequest.FromString,
                    response_serializer=chat__pb2.GroupChatResponse.SerializeToString,
            ),
            'DiscoverChats': grpc.unary_unary_rpc_method_handler(
                    servicer.DiscoverChats,
                    request_deserializer=chat__pb2.Empty.FromString,
                    response_serializer=chat__pb2.DiscoveryResponse.SerializeToString,
            ),
            'InsultChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.InsultChannel,
                    request_deserializer=chat__pb2.Empty.FromString,
                    response_serializer=chat__pb2.InsultResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ConnectToChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/ConnectToChat',
            chat__pb2.ChatConnectionRequest.SerializeToString,
            chat__pb2.ChatConnectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConnectToChatById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/ConnectToChatById',
            chat__pb2.ConnectToChatRequest.SerializeToString,
            chat__pb2.ConnectToChatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetClientInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/GetClientInfo',
            chat__pb2.ChatConnectionRequest.SerializeToString,
            chat__pb2.ClientInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/SendMessage',
            chat__pb2.MessageRequest.SerializeToString,
            chat__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReceiveMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/ReceiveMessage',
            chat__pb2.MessageRequest.SerializeToString,
            chat__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeToGroupChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/SubscribeToGroupChat',
            chat__pb2.GroupChatRequest.SerializeToString,
            chat__pb2.GroupChatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessageToGroupChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/SendMessageToGroupChat',
            chat__pb2.GroupChatRequest.SerializeToString,
            chat__pb2.GroupChatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeToPersistentGroupChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/SubscribeToPersistentGroupChat',
            chat__pb2.GroupChatRequest.SerializeToString,
            chat__pb2.GroupChatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessageToPersistentGroupChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/SendMessageToPersistentGroupChat',
            chat__pb2.GroupChatRequest.SerializeToString,
            chat__pb2.GroupChatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DiscoverChats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/DiscoverChats',
            chat__pb2.Empty.SerializeToString,
            chat__pb2.DiscoveryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsultChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/InsultChannel',
            chat__pb2.Empty.SerializeToString,
            chat__pb2.InsultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
